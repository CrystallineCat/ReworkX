// FIXME Case-insensitive keywords
// FIXME Quote escaping
// FIXME Look closer at dsm_clauses
// FIXME Look at ATTRS

@make_dict
query: 'MATCH' type=graph_type? traversal=path transformers=clause* EOF;

graph_type: 'GRAPH'
          | 'SUBGRAPH';

@collect_flat
path: path edge node
    | node;

@make_dict
node:  '(' node=content ')';

@make_dict
edge: '-[' edge=content ']-'
    | '-'  edge=nothing;

@make_dict
content: alias=ID ':' type=ID
       | alias=ID;

@make_dict
nothing: EMPTY;

@key_value
clause: clause_type clause_params;

clause_type: 'TRANSFER'
           | 'PROJECT'
           | 'COMBINE';

@join_dicts
clause_params: pattern=path dsm_clauses;

@join_dicts
dsm_clauses: dsm_clauses d
           | dsm_clauses s
           | dsm_clauses m
           | d
           | s
           | m;

@key_value
d: 'DELETE' d_param;

@make_dict
d_param: alias=ID+[COMMA];

@key_value
s: 'SET' s_params+[COMMA];

@make_dict
s_params: key=ID '='     value_lookup=LOOKUP
        | key=ID '=' '"' value=NOT_DOUBLE_QUOTE '"'
        | key=ID '=' "'" value=NOT_SINGLE_QUOTE "'";

@key_value
m: 'METHOD' 'ATTRS'
 | 'METHOD' m_params;

@key_value
m_params: algorithm m_args;

algorithm: 'JACCARD'
         | 'NEWMAN'
         | 'EDGES';

@make_dict
m_args: args=ID+[COMMA];


terminals
COMMA: ',';
ID: /(\w|\d|\_)+/;
LOOKUP: /(\w|\d|\_)+[.](\w|\d|\_)+/;
NOT_DOUBLE_QUOTE: /[^"]*/;
NOT_SINGLE_QUOTE: /[^']*/;
KEYWORD: /\w+/;
